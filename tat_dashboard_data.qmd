---
title: "tat_dashboard_data"
author: "Arush Mohan"
date: "`r Sys.Date()`"
params:
  input_dir: "data/providers"  # Path to the directory where provider folders are stored
  submission_date: 20240801  # The date of data submission 
format: html
editor: source
---

##Setup

```{r}

source('src/functions.R')

```

```{r}
# Define parameters for the file paths and other variables
input_dir <- params$input_dir
output_file <- params$output_file
submission_month <- params$submission_month

```

##Load Provider Data Files

```{r}

# Load provider files into a dataframe
provider_files <- load_provider_data(input_dir)

```

##Clean and Transform Data

```{r}

# Process the files into a single dataset
combined_data <- process_provider_files(provider_files)

```

##Save the Combined Dataset

```{r}

# Write the combined data to a CSV file
write_csv(combined_data, paste0('output/', "combined_dataset_", ymd(params$submission_date), ".csv"))

# Output a message
cat("Processed data saved to:", output_file)

```

##Uploading Combined Dataset to the Sandpit

###Establishing a connection ot the Sandpit

```{r}

# Connecting to the Sandpit

con <- dbConnect(odbc::odbc(), 
                 dsn = "SANDPIT",
                 database = "Data_Lab_NCL",
                 TrustedConnection = TRUE)
```

###Uploading the data and transforming according to type

```{r}

# Function to replace or append data based on the data type (freeze or flex)
upload_to_sql <- function(combined_data, con, table_name) {
  
  # Split the combined dataset into freeze and flex data
  freeze_data <- combined_data %>% filter(data_type == "Freeze")
  flex_data <- combined_data %>% filter(data_type == "Flex")
  
  # Replace old flex data with freeze data
  for (i in seq_len(nrow(freeze_data))) {
    freeze_row <- freeze_data[i, ]
    provider_code <- freeze_row$provider_code
    month <- freeze_row$month
    year <- freeze_row$year
    
    tryCatch({
      # SQL Query to delete old flex data for the freeze month
      delete_query <- paste0("DELETE FROM ", table_name, 
                             " WHERE provider_code = '", provider_code, 
                             "' AND month = '", month, 
                             "' AND year = '", year, 
                             "' AND data_type = 'Flex'")
      
      # Execute the delete query
      dbExecute(con, delete_query)
      message("Old flex data for ", provider_code, " (", month, " ", year, ") successfully deleted.")
      
      # Insert the freeze data into the SQL table
      dbWriteTable(con, table_name, freeze_row, append = TRUE, row.names = FALSE)
      message("New freeze data for ", provider_code, " (", month, " ", year, ") successfully uploaded.")
      
    }, error = function(e) {
      warning("Error processing freeze data for ", provider_code, " (", month, " ", year, "): ", e$message)
    })
  }
  
  # For the flex data, either replace or append
  for (i in seq_len(nrow(flex_data))) {
    flex_row <- flex_data[i, ]
    provider_code <- flex_row$provider_code
    month <- flex_row$month
    year <- flex_row$year
    
    tryCatch({
      # SQL Query to check if flex data already exists
      check_query <- paste0("SELECT COUNT(*) FROM ", table_name, 
                            " WHERE provider_code = '", provider_code, 
                            "' AND month = '", month, 
                            "' AND year = '", year, 
                            "' AND data_type = 'Flex'")
      
      # Execute the query to check existence
      result <- dbGetQuery(con, check_query)
      
      if (result[1, 1] > 0) {
        # If flex data exists, delete the old flex data
        delete_query <- paste0("DELETE FROM ", table_name, 
                               " WHERE provider_code = '", provider_code, 
                               "' AND month = '", month, 
                               "' AND year = '", year, 
                               "' AND data_type = 'Flex'")
        dbExecute(con, delete_query)
        message("Existing flex data for ", provider_code, " (", month, " ", year, ") successfully deleted.")
      }
      
      # Insert the new flex data into the SQL table
      dbWriteTable(con, table_name, flex_row, append = TRUE, row.names = FALSE)
      message("New flex data for ", provider_code, " (", month, " ", year, ") successfully uploaded.")
      
    }, error = function(e) {
      warning("Error processing flex data for ", provider_code, " (", month, " ", year, "): ", e$message)
    })
  }
}

# running the upload process
tryCatch({
  con <- connect_to_sql()
  upload_to_sql(combined_data, con, "your_sql_table_name")
}, error = function(e) {
  warning("Error in the upload process: ", e$message)
}, finally = {
  if (exists("con") && !is.null(con)) {
    dbDisconnect(con)
    message("Disconnected from SQL Server.")
  }
})


```
